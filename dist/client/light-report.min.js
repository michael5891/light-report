/*! light-report - v1.3.633 - 2019-09-15 */
"use strict";angular.module("lightReport",[]).constant("lightReportEvents",{APPLY_QUERY:"APPLY_QUERY",ON_DATA:"ON_DATA",FILTER_CHANGED:"FILTER_CHANGED",FILTER_REMOVED:"FILTER_REMOVED"}).factory("LightReportFactory",["RestReportService","LocalReportService",function(RestReportService,LocalReportService){return{create:function(options){var retVal=null;if(options)if("string"==typeof options&&0<options.length)retVal=new RestReportService(options);else if("object"==typeof options)for(var prop in retVal=options.hasOwnProperty("url")?new RestReportService(options):new LocalReportService,options)retVal.hasOwnProperty(prop)&&(retVal[prop]=options[prop]);else console.warn("LightReportFactory: unsupported connection type:",options);else retVal=new LocalReportService;return retVal}}}]);var reportLog=function(message){var now=new Date,hours=now.getHours(),minutes=now.getMinutes(),seconds=now.getSeconds(),milliseconds=now.getMilliseconds();hours<10&&(hours="0"+hours),minutes<10&&(minutes="0"+minutes),seconds<10&&(seconds="0"+seconds),milliseconds<10&&(milliseconds="0"+milliseconds),milliseconds<100&&(milliseconds="0"+milliseconds);var timeStr=hours+":"+minutes+":"+seconds+"."+milliseconds;console.log("["+timeStr+"]"+message)};angular.module("lightReport").directive("lightReport",["lightReportEvents","BaseReportService",function(lightReportEvents,BaseReportService){return{restrict:"A",scope:{reportService:"=lightReport",gridSettings:"=?",reportAutoQuery:"@?",reportSubmitLabel:"@?",sortDirections:"=?",onLoaded:"=?",onSelect:"=?",onDoubleSelect:"=?",onClick:"=?",onSort:"=?",onColumnResize:"=?"},transclude:!0,templateUrl:"../lib/client/directives/lightReport/lightReport.tpl.html",controller:["$scope",function($scope){if($scope.$id=$scope.$id+"_lightReport",$scope.reportGridApi=null,!($scope.reportService instanceof BaseReportService))throw"lightReport.drv: reportService should be extended instance of BaseReportService.";$scope.gridSettings&&"object"==typeof $scope.gridSettings||($scope.gridSettings={}),$scope.sortDirections||($scope.sortDirections={asc:!0,desc:!0,none:!0}),$scope.applyQueryHandler=function(event,message){$scope.reportService.applyQuery(message.isPaging)},$scope.onGridLoadedHandler=function(event){$scope.reportGridApi=event,$scope.onLoaded&&$scope.onLoaded(event)},$scope.onGridSortHandler=function(field){if(!1!==$scope.reportService.reportModel.getColumnByField("field",field).sort){var direction=null,sortBy=$scope.reportService.queryModel.params.sortBy;switch(0<sortBy.length&&($scope.reportGridApi.removeColumnClass(sortBy[0].field,"sorted_"+sortBy[0].direction,!0),sortBy[0].field===field&&(direction=sortBy[0].direction)),direction){case"asc":$scope.sortDirections.desc?direction="desc":$scope.sortDirections.none&&(direction=null);break;case"desc":$scope.sortDirections.none?direction=null:$scope.sortDirections.asc&&(direction="asc");break;case null:$scope.sortDirections.asc?direction="asc":$scope.sortDirections.desc&&(direction="desc")}var isOverriden=!1;$scope.onSort&&(isOverriden=$scope.onSort(field,direction)),!0!==isOverriden&&$scope.reportService.sort(field,direction)&&(direction&&$scope.reportGridApi.addColumnClass(field,"sorted_"+direction,!0),$scope.reportGridApi.refresh())}},$scope.onDataHandler=function(result,isAppended){isAppended?$scope.reportGridApi.refresh():($scope.reportGridApi.scrollTop(),$scope.$root.$$phase||$scope.$digest());var sortBy=$scope.reportService.queryModel.params.sortBy;0<sortBy.length&&$scope.reportGridApi.addColumnClass(sortBy[0].field,"sorted_"+sortBy[0].direction,!0)},$scope.onScrollHitBottom=function(event){!$scope.reportService.isInProgress&&$scope.reportService.queryModel.hasNext&&(reportLog("lightReport.drv: onScrollHitBottom"),$scope.reportService.queryModel.page++,$scope.reportService.applyQuery(!0))},$scope.reportService.onData($scope.onDataHandler),$scope.applyQueryUnbind=$scope.$on(lightReportEvents.APPLY_QUERY,$scope.applyQueryHandler)}],link:function($scope,element){$scope.$watch(function(){return $scope.reportService.columns},function(){$scope.gridSettings.columns=$scope.reportService.reportModel.displayedColumns}),element.on("$destroy",function(){$scope.reportService.offData($scope.onDataHandler),$scope.applyQueryUnbind()})}}}]),angular.module("lightReport").directive("reportFilter",["lightReportEvents","ReportFilterService",function(lightReportEvents,ReportFilterService){return{restrict:"A",require:"^ngModel",scope:{reportFilterApi:"=reportFilter",filterKey:"=?",filterField:"@",filterValue:"=",filterType:"@",filterFrom:"=",filterTo:"=",filterOperation:"@"},controller:["$scope",function($scope){$scope.$id=$scope.$id+"reportFilter"}],link:function($scope,element,attrs,ngModelCtrl){$scope.getModelValue=function(){var retVal=$scope.filterValue;return!retVal&&ngModelCtrl&&(retVal=ngModelCtrl.$modelValue),retVal},$scope.$watchGroup(["getModelValue()","filterField","filterType"],function(newValues){var modelValue=newValues[0];(!$scope.filterKey||0===$scope.filterKey.length&&$scope.filterField&&0<$scope.filterField.length)&&($scope.filterKey=$scope.filterField+"Filter"),function(newValue){var message={key:$scope.filterKey,field:$scope.filterField,type:$scope.filterType};switch($scope.filterType){case ReportFilterService.MAP:case ReportFilterService.FIELD:message.data=newValue,message.operation=$scope.filterOperation;break;case ReportFilterService.RANGE:case ReportFilterService.DATE_RANGE:var side="from";void 0===attrs.filterFrom&&void 0!==attrs.filterTo&&(side="to"),message[side]={data:newValue,operation:$scope.filterOperation}}$scope.$emit(lightReportEvents.FILTER_CHANGED,message)}(modelValue)}),$scope.reportFilterApi&&($scope.reportFilterApi.api={remove:function(){var message={key:$scope.filterKey,field:$scope.filterField,type:$scope.filterType};$scope.$emit(lightReportEvents.FILTER_REMOVED,message)}})}}}]),angular.module("lightReport").directive("reportGrid",[function(){return{restrict:"A",require:"^ngModel",scope:{gridSettings:"=?",onLoaded:"=?",onSelect:"=?",onDoubleSelect:"=?",onClick:"=?",onSort:"=?",onColumnResize:"=?",onScrollHitBottom:"=?"},controller:["$scope",function($scope){$scope.$id=$scope.$id+"reportGrid";var resizeTO,defaultGridSettings={columns:null,element:null,rowHeight:24,headerHeight:28,selection:{multi:!0,type:"row"},minColumnWidth:40,resizableColumns:!0,enableInfiniteScroll:!1,infiniteScrollTolerance:50,trackBy:""};for(var key in $scope.gridSettings||($scope.gridSettings={}),defaultGridSettings)defaultGridSettings.hasOwnProperty(key)&&!$scope.gridSettings.hasOwnProperty(key)&&($scope.gridSettings[key]||($scope.gridSettings[key]=defaultGridSettings[key]));$scope.$watch("gridSettings.columns",function(newValue){if(Array.isArray(newValue)&&0<newValue.length){for(var idx=0;idx<newValue.length;idx++)newValue[idx].fixed=newValue[idx].isPinned;$scope.setColumns(newValue)}}),$scope.setColumns=function(newColumns){$scope.gridSettings.columns=newColumns,$scope.grid&&$scope.grid.setColumns(newColumns)},$scope.resizeGrid=function(event){clearTimeout(resizeTO),resizeTO=setTimeout(function(){$scope.grid.resize()},90)},$scope.onGridSortHandler=function(event){$scope.onSort(event.detail.column)},$scope.onGridSelectHandler=function(event){var eventDataObj={dataIndex:event.detail.dataIndex,rowData:event.detail.rowData,column:event.detail.column,isSelect:event.detail.isSelect};$scope.onSelect(eventDataObj)},$scope.onGridDoubleSelectHandler=function(event){$scope.onDoubleSelect(event.detail,event)},$scope.onGridClickHandler=function(event){$scope.onClick(event.detail,event)},$scope.onGridResizeColumnHandler=function(event){var eventDataObj={columnField:event.detail.columnField,columnIndex:event.detail.columnIndex,width:event.detail.width};$scope.onColumnResize(eventDataObj)},$scope.onGridLoadedHandler=function(){var reportGridApi={grid:$scope.grid,setColumns:function(value){$scope.setColumns(value)},setData:function(value){$scope.grid.setData(value)},scrollTop:function(){$scope.grid.scrollY=0},addColumnClass:function(field,className,alsoForDataCells){$scope.grid.addColumnClass(field,className,alsoForDataCells)},removeColumnClass:function(field,className,alsoForDataCells){$scope.grid.removeColumnClass(field,className,alsoForDataCells)},refresh:function(){$scope.grid.refresh()}};$scope.onLoaded(reportGridApi)},$scope.onGridScrollHitBottomHandler=function(event){$scope.onScrollHitBottom&&$scope.onScrollHitBottom(event)}}],link:function($scope,element,attrs,ngModelCtrl){ngModelCtrl.$render=function(){$scope.grid.setData(ngModelCtrl.$modelValue)},$scope.gridSettings.element=element[0],$scope.grid=new StorkGrid($scope.gridSettings),$scope.eventListeners=[{key:"onSort",eventName:"column-click",handler:$scope.onGridSortHandler},{key:"onClick",eventName:"data-click",handler:$scope.onGridClickHandler},{key:"onSelect",eventName:"select",handler:$scope.onGridSelectHandler},{key:"onDoubleSelect",eventName:"dblselect",handler:$scope.onGridDoubleSelectHandler},{key:"onDoubleSelect",eventName:"enter-select",handler:$scope.onGridDoubleSelectHandler},{key:"onColumnResize",eventName:"resize-column",handler:$scope.onGridResizeColumnHandler},{key:"onColumnResize",eventName:"resize-column",handler:$scope.onGridResizeColumnHandler}];for(var idx=0;idx<$scope.eventListeners.length;idx++){var listener=$scope.eventListeners[idx];$scope[listener.key]&&$scope.grid.addEventListener(listener.eventName,listener.handler,!1)}$scope.onScrollHitBottom&&$scope.gridSettings.enableInfiniteScroll&&($scope.grid.addScrollEvent("hitBottom",$scope.gridSettings.infiniteScrollTolerance),$scope.grid.addEventListener("hitBottom",$scope.onGridScrollHitBottomHandler,!1)),window.addEventListener("resize",$scope.resizeGrid,!1),$scope.onLoaded&&$scope.onGridLoadedHandler(),element.on("$destroy",function(){for(var idx=0;idx<$scope.eventListeners.length;idx++){var listener=$scope.eventListeners[idx];$scope.grid.removeEventListener(listener.eventName,listener.handler,!1)}$scope.onScrollHitBottom&&$scope.gridSettings.enableInfiniteScroll&&$scope.grid.removeEventListener("hitBottom",$scope.onGridScrollHitBottomHandler,!1),window.removeEventListener("resize",$scope.resizeGrid,!1),$scope.grid.destroy()})}}}]),angular.module("lightReport").directive("reportQuery",["lightReportEvents","ReportFilterService",function(lightReportEvents,ReportFilterService){return{restrict:"A",scope:{queryModel:"=reportQuery",reportAutoQuery:"@",reportSubmitLabel:"@",reportOnApplyQuery:"=?"},templateUrl:"../lib/client/directives/reportQuery/reportQuery.tpl.html",transclude:!0,controller:["$scope",function($scope){$scope.$id=$scope.$id+"_reportQuery",$scope.filters={},$scope.autoApplyQuery=$scope.reportAutoQuery,void 0===$scope.autoApplyQuery&&($scope.autoApplyQuery="true"),$scope.autoApplyQuery="false"!==$scope.autoApplyQuery,$scope.submitLabel=$scope.reportSubmitLabel,$scope.autoApplyQuery||$scope.submitLabel||($scope.submitLabel="Submit"),$scope.applyQuery=function(isPaging){$scope.$emit(lightReportEvents.APPLY_QUERY,{isPaging:isPaging}),$scope.reportOnApplyQuery&&$scope.reportOnApplyQuery({isPaging:isPaging})},$scope.filterChangedHandler=function(event,message){if(event.stopPropagation(),message.type===ReportFilterService.MAP){var hasData=!1;for(var prop in message.data)if(message.data.hasOwnProperty(prop)){hasData=!0;break}if(!hasData)return $scope.filterRemovedHandler(event,message),{}}var filter=$scope.queryModel.addFilter(message.key,message);$scope.autoApplyQuery&&!filter.isPartial&&$scope.applyQuery(!1)},$scope.filterRemovedHandler=function(event,message){event.stopPropagation(),$scope.queryModel.removeFilter(message.key),$scope.autoApplyQuery&&$scope.applyQuery(!1)},$scope.submitEventHandler=function(){$scope.applyQuery(!1)},$scope.offFilterChanged=$scope.$on(lightReportEvents.FILTER_CHANGED,$scope.filterChangedHandler),$scope.offFilterRemoved=$scope.$on(lightReportEvents.FILTER_REMOVED,$scope.filterRemovedHandler)}],link:function($scope,element,attrs){var transcludeContent=element[0].querySelector(".lightReportQueryContent").children;$scope.hasTranscludeContent=0<transcludeContent.length,!$scope.autoApplyQuery&&$scope.hasTranscludeContent?($scope.formElement=element[0].querySelector(".lightReportQueryForm"),$scope.formElement.addEventListener("submit",$scope.submitEventHandler)):element[0].querySelector(".lightReportQueryFormSubmit").remove(),element.on("$destroy",function(){$scope.offFilterChanged(),$scope.offFilterRemoved(),$scope.formElement&&$scope.formElement.removeEventListener("submit",$scope.submitEventHandler)})}}}]),angular.module("lightReport").directive("tagsFilter",["lightReportEvents","ReportFilterService",function(lightReportEvents,ReportFilterService){return{restrict:"A",require:"ngModel",scope:{getSuggestions:"=",placeholder:"@",settings:"="},controller:["$scope",function($scope){$scope.$id=$scope.$id+"tagsFilter",$scope.placeholder=$scope.placeholder||""}],link:function($scope,element,attrs,ngModelCtrl){var isUpdateInProgress=!1,defaultSettings={element:element[0],suggestionsHandler:$scope.getSuggestions,storkTagsInput:null,placeholder:$scope.placeholder,rechooseRemove:!0,inputMinWidth:110};if($scope.settings)for(var prop in $scope.settings)defaultSettings[prop]=$scope.settings[prop];var tagsObj=new StorkTagsInput(defaultSettings),commitTagsQuery=function(tags){for(var message={key:"tagsKey",type:ReportFilterService.MAP,data:{}},idx=0;idx<tags.length;idx++){var groupField=tags[idx].groupField;message.data[groupField]||(message.data[groupField]=[]),message.data[groupField].push(tags[idx].value)}$scope.$emit(lightReportEvents.FILTER_CHANGED,message)},tagsUpdatedHandler=function(event){isUpdateInProgress||(isUpdateInProgress=!0,ngModelCtrl.$setViewValue(tagsObj.chosenTags),commitTagsQuery(tagsObj.chosenTags),isUpdateInProgress=!1)};tagsObj.addEventListener("tag-added",tagsUpdatedHandler,!1),tagsObj.addEventListener("tag-removed",tagsUpdatedHandler,!1),tagsObj.addEventListener("all-tags-removed",tagsUpdatedHandler,!1),$scope.$watchCollection(function(){return ngModelCtrl.$modelValue},function(newValue){if(!isUpdateInProgress){isUpdateInProgress=!0,tagsObj.removeAllTags();for(var idx=0;idx<newValue.length;idx++)tagsObj.addTag(newValue[idx]);commitTagsQuery(tagsObj.chosenTags),isUpdateInProgress=!1}}),element.on("$destroy",function(){tagsObj.removeEventListener("tag-added",tagsUpdatedHandler,!1),tagsObj.removeEventListener("tag-removed",tagsUpdatedHandler,!1),tagsObj.removeEventListener("all-tags-removed",tagsUpdatedHandler,!1),tagsObj.destroy()})}}}]),angular.module("lightReport").factory("ReportFilterModel",["ReportFilterService","ReportFilterEvaluatorService",function(ReportFilterService,ReportFilterEvaluatorService){var validOperations=[">",">=","<","<=","!=","<>"];function ReportFilterModel(){this.filters={}}return ReportFilterModel.prototype={compileFilter:function(){return ReportFilterService.createFilterFromObject(this.filters)},addFilter:function(key,originalOptions){var isPartial=!1,filter=this.filters[key],options=angular.copy(originalOptions);return void 0!==options.from&&("object"!=typeof options.from||options.from instanceof Date)&&(options.from={data:options.from}),void 0!==options.to&&("object"!=typeof options.to||options.to instanceof Date)&&(options.to={data:options.to}),filter||(filter=options,this.filters[key]=filter),filter.field=options.field,filter.type=options.type,filter.type===ReportFilterService.RANGE||filter.type===ReportFilterService.DATE_RANGE?(options.from&&(filter.from=options.from,-1===validOperations.indexOf(options.from.operation)&&(filter.from.operation=">=")),options.to&&(filter.to=options.to,-1===validOperations.indexOf(options.to.operation)&&(filter.to.operation="<=")),isPartial=!(filter.from&&filter.to)):(filter.data=options.data,filter.operation=-1===validOperations.indexOf(options.operation)?"=":options.operation),{filter:filter,isPartial:isPartial}},removeFilter:function(key){delete this.filters[key]},filterRecords:function(records){if(!Array.isArray(records))throw new TypeError("filterRecords: records must be an Array");var filtered=[],recordsCopy=records.slice(0);if(Object.keys(this.filters).length)for(var filter=this.compileFilter(),evaluator=new ReportFilterEvaluatorService,idx=0;idx<recordsCopy.length;idx++)evaluator.evaluate(filter,recordsCopy[idx])&&filtered.push(recordsCopy[idx]);else filtered=recordsCopy;return filtered}},ReportFilterModel}]),angular.module("lightReport").factory("ReportModel",[function(){function ReportModel(){this.$data=[],this.$columns=[]}return ReportModel.prototype={get data(){return this.$data},set data(value){value instanceof Array&&(this.$data=value)},get displayedColumns(){var ret=[];return angular.forEach(this.$columns,function(value){value.isDisplayed&&ret.push(value)}),ret},get columns(){return this.$columns},set columns(newColumns){if(angular.isObject(newColumns)){var column,self=this,columnsArr=[],isArray=Array.isArray(newColumns);angular.forEach(newColumns,function(value,key){isArray||value.hasOwnProperty("field")||(value.field=key),column=self.createColumn(value),columnsArr.push(column)}),this.$columns=columnsArr}},getColumnByField:function(field,value){return this.$columns.find(function(column){return column[field]===value})},createColumn:function(settings){var retVal={field:"FIELD_EMPTY",label:"LABEL_EMPTY",type:"string",sort:!0,sortable:!0,isDisplayed:!0,isPinned:!1,getSuggestions:null};for(var prop in settings)retVal[prop]=settings[prop];return-1!==retVal.field.indexOf("_displayValue")&&(retVal.isDisplayed=!1),!1===settings.sort&&(retVal.sortable=!1),retVal}},ReportModel}]),angular.module("lightReport").factory("ReportQueryModel",["ReportFilterModel",function(ReportFilterModel){function ReportQueryModel(){this.params={clientParams:{seqId:1},fromRow:0,rows:150,scnId:-1,sortBy:[]},this.$page=0,this.hasNext=0,this.filterModel=new ReportFilterModel,Object.defineProperty(this,"page",{get:function(){return this.$page},set:function(value){angular.isNumber(value)&&(this.$page=value,this.params.fromRow=this.params.rows*this.$page)}})}return ReportQueryModel.SortDirection={ASC:"asc",DESC:"desc"},ReportQueryModel.prototype.sort=function(field,direction){if(!("string"!=typeof field||direction&&void 0===ReportQueryModel.SortDirection[direction.toUpperCase()]))if(direction){for(var val={field:field,direction:direction.toLowerCase()},itemIdx=-1,idx=0;idx<this.params.sortBy.length;idx++)if(this.params.sortBy[idx].field===field){itemIdx=idx;break}-1<itemIdx?this.params.sortBy[itemIdx]=val:this.params.sortBy.push(val)}else-1<itemIdx&&this.params.sortBy.splice(itemIdx,1)},ReportQueryModel.prototype.clearSort=function(){this.params.sortBy=[]},ReportQueryModel.prototype.queryToUrlString=function(manualParams){var filterNodes,query,tmpSortBy,backups={};if(manualParams)for(var key in manualParams)manualParams.hasOwnProperty(key)&&this.params.hasOwnProperty(key)&&(backups[key]=this.params[key],void 0===manualParams[key]||null===manualParams[key]?delete this.params[key]:this.params[key]=manualParams[key]);if(filterNodes=this.filterModel.compileFilter(),this.params.filter=JSON.stringify(filterNodes),tmpSortBy=this.params.sortBy,this.params.sortBy&&0<this.params.sortBy.length){this.params.sortBy=[];for(var idx=0;idx<tmpSortBy.length;idx++){var sortItem=tmpSortBy[idx],val={};val[sortItem.field]=sortItem.direction,this.params.sortBy.push(val)}this.params.sortBy=JSON.stringify(this.params.sortBy)}else delete this.params.sortBy;if(query=$.param(this.params),delete this.params.filter,this.params.sortBy=tmpSortBy,backups)for(key in backups)backups.hasOwnProperty(key)&&this.params.hasOwnProperty(key)&&(this.params[key]=backups[key]);return query},ReportQueryModel.prototype.filterRecords=function(records){return this.filterModel.filterRecords(records)},ReportQueryModel.prototype.addFilter=function(key,options){return this.filterModel.addFilter(key,options)},ReportQueryModel.prototype.removeFilter=function(key){this.filterModel.removeFilter(key)},ReportQueryModel}]),angular.module("lightReport").service("ReportFilterService",["ReportFilterEvaluatorService",function(ReportFilterEvaluatorService){var ReportFilterService={FIELD:"FIELD",MAP:"MAP",RANGE:"RANGE",DATE_RANGE:"DATE_RANGE",createFilter:function(options){var retVal=null;switch(options.type){case ReportFilterService.FIELD:(retVal={})[options.operation]=[options.field,options.data];break;case ReportFilterService.MAP:retVal=ReportFilterService.createFilterFromSearchMap(options.data);break;case ReportFilterService.RANGE:retVal=ReportFilterService.createFilterInRange(options.field,options.from,options.to);break;case ReportFilterService.DATE_RANGE:retVal=ReportFilterService.createFilterDateInRange(options.field,options.from,options.to);break;default:console.warn("ReportFilterService.createFilter: no filter type specified.")}return retVal},createFilterFromSearchMap:function(map){for(var values=[],columns=Object.keys(map),idx=0;idx<columns.length;idx++)values.push(this.createStatementFromMapValues(columns[idx],map[columns[idx]]));var retVal=values[0];return 1<columns.length&&(retVal={AND:values}),retVal},createFilterInRange:function(field,from,to){var retVal={AND:[{},{}]};return retVal.AND[0][from.operation]=[field,from.data],retVal.AND[1][to.operation]=[field,to.data],retVal},createFilterDateInRange:function(field,from,to){var adjustedFrom={data:new Date(from.data).getTime(),operation:from.operation},adjustedTo={data:new Date(to.data).getTime(),operation:to.operation};return this.createFilterInRange(field,adjustedFrom,adjustedTo)},createFilterFromObject:function(obj){var filterNodes={},keys=Object.keys(obj);if(1<keys.length)for(var key in filterNodes={AND:[]},obj){var filter=this.createFilter(obj[key]);filterNodes.AND.push(filter)}else 0!==keys.length&&(filterNodes=this.createFilter(obj[keys[0]]));return filterNodes},createStatementFromMapValues:function(columnName,values){var isInStatement=1<values.length,statement={};return statement[isInStatement?"IN":"="]=[columnName,isInStatement?values:values[0]],statement}};return ReportFilterService}]),angular.module("lightReport").factory("ReportFilterEvaluatorService",function(){function ReportFilterEvaluatorService(){}return ReportFilterEvaluatorService.prototype={evaluate:function(filter,record){var operator=Object.keys(filter)[0];return this[operator](filter[operator],record)},OR:function(nodes,record){for(var operator,idx=0;idx<nodes.length;idx++)if(this[operator=Object.keys(nodes[idx])[0]](nodes[idx][operator],record))return!0;return!1},AND:function(nodes,record){for(var operator,idx=0;idx<nodes.length;idx++)if(!this[operator=Object.keys(nodes[idx])[0]](nodes[idx][operator],record))return!1;return!0},IN:function(nodes,record){for(var key=nodes[0],val=nodes[1],recordVal=record[key],idx=0;idx<val.length;idx++)if(val[idx]==recordVal)return!0;return!1},"=":function(nodes,record){var key=nodes[0],val=nodes[1];return record[key]==val},">=":function(nodes,record){var key=nodes[0],val=nodes[1],recordVal=record[key];if(isNaN(val))throw val+" is not a number";if(isNaN(recordVal))throw recordVal+" is not a number";return val<=recordVal},"<=":function(nodes,record){var key=nodes[0],val=nodes[1],recordVal=record[key];if(isNaN(val))throw val+" is not a number";if(isNaN(recordVal))throw recordVal+" is not a number";return recordVal<=val},">":function(nodes,record){var key=nodes[0],val=nodes[1],recordVal=record[key];if(isNaN(val))throw val+" is not a number";if(isNaN(recordVal))throw recordVal+" is not a number";return val<recordVal},"<":function(nodes,record){var key=nodes[0],val=nodes[1],recordVal=record[key];if(isNaN(val))throw val+" is not a number";if(isNaN(recordVal))throw recordVal+" is not a number";return recordVal<val}},ReportFilterEvaluatorService}),angular.module("lightReport").service("BaseReportService",["ReportModel","ReportQueryModel",function(ReportModel,ReportQueryModel){function BaseReportService(){this.reportModel=new ReportModel,this.queryModel=new ReportQueryModel,this.isInProgress=!1,this.onDataHandlers=[],this.applyQueryThrottleLatency=0,this.$appendDataThrottleLatency=0,this.applyQueryTimeout=void 0,Object.defineProperty(this,"appendDataThrottleLatency",{enumerable:!0,get:function(){return this.$appendDataThrottleLatency},set:function(value){angular.isNumber(value)&&(this.$appendDataThrottleLatency=value,this.appendData=0<value?this.appendDataThrottle():this.$appendData)}})}return BaseReportService.prototype={get data(){return this.reportModel.data},set data(value){this.setData(value)},get columns(){return this.reportModel.columns},set columns(columns){this.reportModel.columns=columns},get page(){return this.queryModel.page},set page(value){this.queryModel.page=value},get hasNext(){return this.queryModel.hasNext},set hasNext(value){"boolean"==typeof value&&(this.queryModel.hasNext=value)},setData:function(value){value instanceof Array?(this.reportModel.data=value,this.updateDataHandlers({data:this.reportModel.data,queryModel:this.queryModel},!1)):console.warn("BaseReportService.setData: value must be an Array")},updateDataHandlers:function(value,isAppended){for(var idx=0;idx<this.onDataHandlers.length;idx++)this.onDataHandlers[idx](value,isAppended)},hasColumns:function(){return 0<this.reportModel.columns.length},applyQuery:function(isPaging){var self=this;self.isInProgress=!0,self.applyQueryThrottleLatency&&0<self.applyQueryThrottleLatency?self.applyQueryTimeout||(self.applyQueryTimeout=setTimeout(function(){self.$applyQuery(isPaging),clearTimeout(self.applyQueryTimeout),self.applyQueryTimeout=void 0},self.applyQueryThrottleLatency)):self.$applyQuery(isPaging)},$applyQuery:function(isPagging){},onData:function(handler){this.onDataHandlers.push(handler)},offData:function(handler){var itemIdx=this.onDataHandlers.indexOf(handler);0<=itemIdx&&this.onDataHandlers.splice(itemIdx,1)},addFilter:function(key,options){return this.queryModel.filterModel.addFilter(key,options)},removeFilter:function(key){this.queryModel.filterModel.removeFilter(key)},getSuggestions:function(queryString,callback){callback([])},sort:function(field,direction){this.queryModel.clearSort(),this.queryModel.sort(field,direction);var column=this.reportModel.getColumnByField("field",field),comparator=this.defaultComparator;return column&&"function"==typeof column.sort&&(comparator=column.sort),this.reportModel.data.sort(this.compareFields(field,direction,comparator)),!0},compareFields:function(field,direction,comparator){comparator=comparator||this.defaultComparator;var numericDirection=-1;return"asc"===direction&&(numericDirection=1),function(objA,objB){return comparator(objA,objB,field)*numericDirection}},defaultComparator:function(valueA,valueB,field){var left=String(valueA[field]).split(",").join(""),right=String(valueB[field]).split(",").join("");return left.localeCompare(right,"kn",{numeric:!0})},appendData:function(records,prepend){this.$appendData(records,prepend)},prependData:function(records){this.$prependData(records)},$appendData:function(records,prepend){throw new Error("$appendData: Not supported")},$prependData:function(records){throw new Error("$prependData: Not supported")},appendDataThrottle:function(){var timer=null,pendingData=[],self=this;return function(value){Array.isArray(value)?Array.prototype.push.apply(pendingData,value):pendingData.push(value),null===timer&&(self.$appendData(pendingData),pendingData=[],timer=setTimeout(function(){clearTimeout(timer),timer=null,0<pendingData.length&&(self.$appendData(pendingData),pendingData=[])},this.$appendDataThrottleLatency))}}},BaseReportService}]),angular.module("lightReport").service("LocalReportService",["BaseReportService",function(BaseReportService){function LocalReportService(){BaseReportService.call(this),this.dataMap={},this.displayDataMap={},this.rawData=[],this.maxRecords=0}return((LocalReportService.prototype=Object.create(BaseReportService.prototype)).constructor=LocalReportService).prototype.setData=function(value){value instanceof Array&&(0<this.maxRecords&&value.length>this.maxRecords?this.rawData=value.splice(0,this.maxRecords-1):this.rawData=value,this.$applyQuery(!1))},LocalReportService.prototype.$appendData=function(newRecords,prepend){this.isInProgress=!0,Array.isArray(newRecords)||(newRecords=[newRecords]),0<this.maxRecords&&newRecords.length>this.maxRecords&&(newRecords=newRecords.splice(0,this.maxRecords));for(var idx=0;idx<newRecords.length;idx++)!0===prepend?this.rawData.push(newRecords[idx]):this.rawData.unshift(newRecords[idx]);if(0<this.maxRecords&&this.rawData.length>this.maxRecords){var removedRecords=this.rawData.splice(this.maxRecords);this.removeFromViewModel(removedRecords)}var filteredData=this.addToViewModel(newRecords);this.lastResponse={data:filteredData,queryModel:this.queryModel,isPaging:!1},this.updateDataHandlers(this.lastResponse,!0),this.isInProgress=!1},LocalReportService.prototype.$prependData=function(newRecords){this.$appendData(newRecords,!0)},LocalReportService.prototype.addToViewModel=function(records){var filteredData=this.queryModel.filterRecords(records);if(0<filteredData.length)if(this.updateDataMap(this.dataMap,filteredData,this.reportModel.columns),0<this.queryModel.params.sortBy.length)this.addDataWithSort(filteredData);else for(var idx=0;idx<filteredData.length;idx++)this.reportModel.data.push(filteredData[idx]);return filteredData},LocalReportService.prototype.removeFromViewModel=function(records,force){var itemIdx,filteredRecords;filteredRecords=(force=force||!1)?records:this.queryModel.filterRecords(records);for(var idx=0;idx<filteredRecords.length;idx++)-1!==(itemIdx=this.reportModel.data.indexOf(filteredRecords[idx]))&&this.reportModel.data.splice(itemIdx,1);this.updateDataMap(this.dataMap,records,this.reportModel.columns,!0)},LocalReportService.prototype.updateData=function(records){Array.isArray(records)||(records=[records]),this.removeFromViewModel(records,!0);var filteredData=this.addToViewModel(records);this.lastResponse={data:filteredData,queryModel:this.queryModel,isPaging:!1},this.updateDataHandlers(this.lastResponse,!0)},LocalReportService.prototype.addDataWithSort=function(newData){var idx,existingLength=this.reportModel.data.length,newDataLegnth=newData.length,sortField=this.queryModel.params.sortBy[0].field,sortDirection=this.queryModel.params.sortBy[0].direction,comparator=null;for(idx=0;idx<this.reportModel.columns.length;idx++){var column=this.reportModel.columns[idx];if(column.field===sortField&&"function"==typeof column.sort){comparator=column.sort;break}}var compareFunc=this.compareFields(sortField,sortDirection,comparator);if(existingLength&&newDataLegnth&&(existingLength<newDataLegnth||.5<newDataLegnth/existingLength)){for(idx=0;idx<newData.length;idx++)this.reportModel.data.push(newData[idx]);this.reportModel.data.sort(compareFunc)}else for(idx=0;idx<newData.length;idx++){var destIdx=0,value=newData[idx];if(0<this.queryModel.params.sortBy.length)for(destIdx=0;destIdx<this.reportModel.data.length&&!(0<=compareFunc(this.reportModel.data[destIdx],value));destIdx++);this.reportModel.data.splice(destIdx,0,value)}},LocalReportService.prototype.$applyQuery=function(isPaging){this.isInProgress=!0;var filteredData=this.queryModel.filterRecords(this.rawData);this.dataMap=this.buildDataMap(filteredData,this.reportModel.columns),this.reportModel.data=filteredData,0<this.queryModel.params.sortBy.length&&this.sort(this.queryModel.params.sortBy[0].field,this.queryModel.params.sortBy[0].direction),this.lastResponse={data:filteredData,queryModel:this.queryModel,isPaging:isPaging},this.updateDataHandlers(this.lastResponse,!1),this.isInProgress=!1},LocalReportService.prototype.getSuggestions=function(queryString,existingTags,callback){var self=this,result=[],existingGroups=[];if(angular.isString(queryString)&&0<queryString.length){queryString=queryString.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");for(var idx=0;idx<existingTags.length;idx++)existingGroups.push(existingTags[idx].groupField);angular.forEach(self.dataMap,function(group,key){if(-1===key.indexOf("_displayValue")&&-1===existingGroups.indexOf(key)){var groupItems=null;(groupItems="function"==typeof group.getSuggestions?group.getSuggestions(group.map,queryString):self.findMatches(group.map,queryString))&&0<groupItems.length&&result.push({field:key,items:groupItems,label:group.label})}})}callback(result)},LocalReportService.prototype.buildDataMap=function(data,columns){for(var key,dataItem,displayKey,itemValue,displayValue,retVal={},idx=0;idx<columns.length;idx++)-1===columns[idx].field.indexOf("_displayValue")&&(retVal[columns[idx].field]={label:columns[idx].label,map:{},getSuggestions:columns[idx].getSuggestions});for(idx=0;idx<data.length;idx++)for(key in dataItem=data[idx],retVal)displayKey=dataItem.hasOwnProperty(key+"_displayValue")?key+"_displayValue":key,void 0!==dataItem[displayKey]&&(displayValue=dataItem[displayKey],itemValue=dataItem[key],retVal[key].map.hasOwnProperty(displayValue)||(retVal[key].map[displayValue]={value:itemValue,count:0}),retVal[key].map[displayValue].count++);return retVal},LocalReportService.prototype.updateDataMap=function(dataMap,records,columns,isRemove){var recordIdx,record,idx,fieldValue,displayValue,map,columnField;for(Array.isArray(records)||(records=[records]),recordIdx=0;recordIdx<records.length;recordIdx++)for(record=records[recordIdx],idx=0;idx<columns.length;idx++)-1===(columnField=columns[idx].field).indexOf("_displayValue")&&(dataMap[columnField]||(dataMap[columnField]={label:columns[idx].label,map:{}}),fieldValue=record[columnField],displayValue=record.hasOwnProperty(columnField+"_displayValue")&&void 0!==record[columnField+"_displayValue"]?record[columnField+"_displayValue"]:fieldValue,fieldValue&&((map=dataMap[columnField].map)[displayValue]?isRemove?(map[displayValue].count--,0===map[displayValue].count&&delete map[displayValue]):map[displayValue].count++:isRemove||(map[displayValue]={value:fieldValue,count:0})))},LocalReportService.prototype.findMatches=function(map,query){var passed,results=[],regExp=new RegExp("[\\s.,+_\\-()\\[\\]{}'\"/]"+query+"|^"+query,"gi");for(var key in map){if(!(passed=regExp.test(key))){var cleanKey=key.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"");regExp.lastIndex=0,passed=regExp.test(cleanKey)}passed&&results.push({value:map[key].value,label:key}),regExp.lastIndex=0}return results},LocalReportService}]),angular.module("lightReport").service("LocalReportWorker",[function(){function workerContent(){function compareFields(field,direction){return direction="asc"===direction?-1:1,function(a,b){var left=String(a[field]).split(",").join(""),right=String(b[field]).split(",").join("");return left.localeCompare(right,"kn",{numeric:!0})*direction}}self.addEventListener("message",function(event){reportLog("worker: appendSort"),function(destData,newData,field,direction){for(var newIdx=0;newIdx<newData.length;newIdx++){var right=newData[newIdx],compareFunc=compareFields(field,direction),destIdx=0;for(destIdx=0;destIdx<destData.length&&!(0<=compareFunc(newData[newIdx],destData[destIdx]));destIdx++);destData.splice(destIdx,0,right)}}(event.data.destData,event.data.newData,event.data.field,event.data.direction),postMessage(event.data.destData)})}function LocalReportWorker(){var blob=new Blob(["(",workerContent.toString(),"())"],{type:"text/javascript"});this.blobURL=window.URL.createObjectURL(blob),this.worker=null}LocalReportWorker.prototype.create=function(){this.worker=new Worker(this.blobURL)};var workerMessageHandler=!(LocalReportWorker.prototype.destroy=function(){this.worker.removeEventListener("message",resultListener),this.worker.terminate(),this.worker=null,window.URL.revokeObjectURL(this.blobURL)});return LocalReportWorker.prototype.appendSort=function(sortArgs,callback){workerMessageHandler||(workerMessageHandler=!0,this.worker.addEventListener("message",function(event){reportLog("LocalReportWorker: callback"),callback(event.data)},!1)),this.worker.postMessage(sortArgs)},LocalReportWorker}]),angular.module("lightReport").service("RestReportService",["$http","BaseReportService","$q",function($http,BaseReportService,$q){function RestReportService(url){BaseReportService.call(this),url||console.warn("lightReport.RestReportService: Must specify service url."),this.url=url,this.lastResponse={data:[],query:{},isPaging:!1},this.queryCanceller=null,this.SYNC_COLUMNS={NEVER:0,ONCE:1,ALWAYS:2},this.syncColumns=this.SYNC_COLUMNS.ONCE}return(RestReportService.prototype=Object.create(BaseReportService.prototype)).$applyQuery=function(isPaging){var self=this;if(this.isInProgress=!0,isPaging){if(!1===this.queryModel.hasNext)return void(this.isInProgress=!1)}else delete this.queryModel.params.scnId,this.queryModel.page=0;this.queryCanceller&&this.queryCanceller.resolve(),this.queryCanceller=$q.defer();var queryClone=angular.copy(this.queryModel),url=this.url+"/?"+this.queryModel.queryToUrlString();$http.get(url,{timeout:this.queryCanceller.promise}).success(function(response){self.queryModel.params.scnId=response.scnId,self.queryModel.hasNext=response.hasNext,self.lastResponse.data=response.data,self.lastResponse.executionTime=response.executionTime,self.lastResponse.queryModel=queryClone,(self.lastResponse.isPaging=isPaging)?Array.prototype.push.apply(self.reportModel.data,response.data):(self.reportModel.data=response.data,self.syncColumns!==self.SYNC_COLUMNS.NEVER&&(self.syncColumns===self.SYNC_COLUMNS.ONCE&&(self.syncColumns=self.SYNC_COLUMNS.NEVER),self.columns=response.columns)),self.updateDataHandlers(self.lastResponse,isPaging)}).finally(function(){self.isInProgress=!1})},RestReportService.prototype.getSuggestions=function(queryString,existingTags,callback){var url=this.url+"/suggest/?query="+encodeURIComponent(queryString);if(0<existingTags.length){url+="&alreadySelectedColumns="+existingTags[0].groupField;for(var idx=1;idx<existingTags.length;idx++)url+=","+existingTags[idx].groupField}var self=this;$http.get(url).success(function(data){var parsedSuggestions=self.parseSuggestions(data);callback(parsedSuggestions)})},RestReportService.prototype.parseSuggestions=function(data){var suggestions=[];for(var key in data){for(var tmpObj={field:key,label:data[key].label,items:[]},idx=0;idx<data[key].results.length;idx++)tmpObj.items.push({value:data[key].results[idx],label:data[key].results[idx]});suggestions.push(tmpObj)}return suggestions},RestReportService.prototype.sort=function(field,direction){this.queryModel.clearSort(),this.queryModel.sort(field,direction),this.$applyQuery(!1)},RestReportService}]),angular.module("lightReport").run(["$templateCache",function($templateCache){$templateCache.put("../lib/client/directives/lightReport/lightReport.tpl.html",'<div class="lightReportQuery"\n     report-query="reportService.queryModel"\n     data-report-auto-query="{{reportAutoQuery}}"\n     data-report-submit-label="{{reportSubmitLabel}}" >\n\t<ng-transclude class="lightReportQueryTrunsclude"></ng-transclude>\n</div>\n\n<div class="lightReportGrid"\n     ng-model="reportService.reportModel.data"\n     report-grid\n     data-grid-settings="gridSettings"\n\n     data-on-loaded="onGridLoadedHandler"\n\t data-on-sort="onGridSortHandler"\n\t data-on-select="onSelect"\n\t data-on-double-select="onDoubleSelect"\n\t data-on-click="onClick"\n\t data-on-column-resize="onColumnResize"\n\t data-on-scroll-hit-bottom="onScrollHitBottom">\n\n</div>'),$templateCache.put("../lib/client/directives/reportQuery/reportQuery.tpl.html",'<form class="lightReportQueryForm" name="lightReportQueryForm">\n\t<ng-transclude class="lightReportQueryContent"></ng-transclude>\n\t<input class="lightReportQueryFormSubmit" type="submit" value="{{submitLabel}}">\n</form>')}]);
//# sourceMappingURL=light-report.min.js.map